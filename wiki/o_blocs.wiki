<h1>Plugin o_blocs</h1>

<h2>Introduction</h2>

Le Plugin _"ocms_blocs"_ est un Plugin de base du CMS.

Il permet d'afficher et gérer dynamiquement des blocs de contenu sur une page.

<h2>Installation du plugin</h2>

[CreationGabarit#Installation_du_gabarit_ou_du_plugin Installation d'un gabarit ou plugin dans le Back-Office]

<h2>Créer un bloc</h2>

Se rendre dans l'administration et rajouter dans l'url le paramètre _"?curTable=s_bloc"_.
Cliquez sur _Ajouter un élément_.

[http://www.opixido.com/ocms/screen/plugins/o_bloc-creer.png]
<ul>
<li>Donnez un nom au bloc</li>
<li>Écrire une condition quand à son affichage (facultatif)</li>
<li>Donnez un nom de classe (facultatif)</li>
<li>Rendez-le visible</li>
</ul>

== Affichage ==

Pour afficher dans le layout ce que contient le bloc, modifiez le fichier _default.html.php_ du dossier _include/exports/_, et faites appel à pa fonction _genBloc()_ à l'endroit voulu :
<code language="php">
<div id="bloc-droite">

<?php
  //Remplacez "nomBloc" par le nom que vous lui avez donné lors de sa création
  echo $this->plugins['o_blocs']->blocs['nomBloc']->genBloc(); 
  //$this->plugins est un tableau contenant la liste des plugins
  //$this->plugins['o_blocs'] est un objet o_blocsFront
  //$this->plugins['o_blocs']->blocs est un tableau contenant la liste des blocs
  //$this->plugins['o_blocs']->blocs['nomBloc'] est un objet bloc
?>

</div>
</code>

<h2>Ajouter un contenu</h2>

Vous pouvez ajouter du contenu dans ce bloc en appelant la fonction _add()_ *dans la fonction _init()_* sur le bloc :

<code language="php">
/* @param string $nom
 * @param string $html
 * @param string $class
 */
function add($nom, $html, $class);
</code>

Exemple, dans le plugin _"ocms_downloads"_ (version raccourcie) :

<code language="php">
class ocms_downloadFront extends ocmsPlugin
{
 public function afterInit()
 {
  $this->downloads = $this->getDownloads();

  //Si il y a des téléchargements, alors on ajoute du contenu au bloc		
  if($this->downloads)
  {
   $this->site->plugins['o_blocs']->blocs['droite']->add('downloads',$this->genDownloads());
  }
 }

 public function genDownloads()
 {
  $tpl = new genTemplate();
  $tpl->loadTemplate('download_box','plugins/ocms_download/tpl');

  foreach($this->downloads as $row)
  {
   $stpl = $tpl->addBlock('DOWNLOAD');
   $d = new row('p_download',$row);
   $stpl->nom = $d->download_titre;
   $stpl->url = $d->download_fichier;
  }

  //Retourne la génération HTML du template
  return $tpl->gen();
 }
}
</code>

<h2>Les fonctions de la classe bloc</h2>

<ul>

<li>
*Générer le bloc* (cf. [o_blocs#Affichage Affichage] ) :
<code>
//Générer le contenu du bloc
function genBloc();
</code>
</li>

<li>
*Ajouter du contenu au bloc*
<code>
/* @param string $id nom de la boite
 * @param string $html contenu de la boite
 * @param string $class classe de la boite
 */
function add($id, $html, $class);
</code>
</li>

<li>
*Afficher ou cacher un bloc*
<code>
//Cacher le bloc
function hide();
//Afficher le bloc
function show();
</code>
</li>

<li>
*Ajouter du contenu après une boite*
<code>
/* @param string $first nom de la première boite
 * @param string $nom nom de la deuxième boite
 * @param string $html de la deuxième boite
 */
function addAfter($first, $nom, $html);
</code>
</li>

<li>
*Ajouter du contenu avant une boite*
<code>
/* @param string $second de la seconde boite
 * @param string $nom nom de la première boite
 * @param string $html de la deuxième boite
 */
function addBefore($second, $nom, $html);
</code>
</li>

<li>
*Ajouter une boite en premier* (avant toutes les autres)
<code>
/* @param string $nom
 * @param string $html
 */
function addAtTop($nom, $html);
</code>
</li>

<li>
*Tout supprimer*
<code>
function clean();
</code>
</li>

<li>
*Supprimer une boite*
<code>
/* string $nom nom de la boite à supprimer
 */
function remove($nom);
</code>
</li>

</ul>