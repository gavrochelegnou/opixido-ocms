#labels Documentation
<h1>Créer la gestion d'un gabarit/plugin dans le back-office</h1>

Doc : _include/config/config.base.php_

<h2>Fonctionnement</h2>

<h3>Ajout dans le back-office</h3>

 * Ouvrez le fichier de configuration "_config.php_".

 * Déclarez toutes ces variables globales qui nous seront utiles plus tard : 
<code>
global $tabForms,$uploadFields,$_Gconfig,$relinv,$orderFields,$admin_trads, $gs_roles, $rteFields, $relations, $tablerel, $basePath, $admin_trads,$searchField;
</code>

 * Pour ajouter un lien/bouton vers la gestion dans le back-office : 

<code>
$_Gconfig['bigMenus']['nomPlugin'][] = 'nomTable';
</code>

 * Pour modifier le titre du bouton et ajouter un icône :
<code>
//traduction du texte
$admin_trads["cp_txt_nomTable"]["fr"] = "Nom de mon gabarit";

//Ajout de l'icône
$tabForms["nomTable"]["picto"] = ADMIN_PICTOS_FOLDER."32x32/apps/internet-news-reader.png";
</code>

*Important: n'oubliez pas de rajouter le plugin dans le back-office et de l'installer!*

<h3>Afficher la liste</h3>

 * Cliquez sur le bouton pour afficher la liste.

 * Pour définir quels champs afficher dans le back-office :

<code>
//Listez tous les champs de la table que vous souhaitez afficher
$tabForms['nomTable']['titre'] = array('nomTable_titre', 'nomTable_contenu');
//'titre' : pour définir les champs à lister
</code>

<h3>Créer le formulaire d'ajout</h3> 

 * Dans le dossier "_forms_", créez, si ce n'est pas déjà fait, un fichier PHP nommé "_nomPlugin.form.php_".(_include/plugins/nomPlugin/forms/nomPlugin.form.php_).
Il contiendra la liste des attributs de la base de données à générer dans le formulaire

 * Faites appel à ce fichier dans le _config.php_ : 

<code>
$tabForms['nomTable']['pages']['Nom'] = array('../plugins/nomPlugin/forms/nomPlugin.form.php');
//'pages' : pour définir où se trouve le fichier de formulaire
//Le tableau doit contenir le chemin vers votre fichier de formulaire
</code>

 * Dans le fichier créé (_nomPlugin.form.php_), générez chaque attribut de la table :

<code>
<?php
$this->gen('nomTable_date');
// ...
$this->genlg('nomTable_titre');
//genlg va servir à générer le contenu multilingue
$this->genlg('nomTable_contenu');
?>
</code>

<h3>Options</h3>

<h4> Les attributs gérés automatiquement par OCMS </h4>

|| *ocms_date_modif* || Date de modification ||
|| *ocms_date_crea* || Date de création de la ligne ||
|| *ocms_date_online* || Date de mise en ligne (date à partir de laquelle la ligne est prise en compte) ||
|| *ocms_date_offline* || Date à partir de laquelle la ligne n'est plus prise en compte ||
|| *ocms_creator* || Identifiant de l'administrateur qui a créé la ligne, [GestionDroits#Ajouter_les_droits_pour_chaque_table exemple ici] ||

<h4> Les types de champs </h4>
|| *Type* || *Fin* ||
|| Mail || `_mail`, `_couriel`, `_email` ||
|| Url || `_url`, `_url_`, `_link_1`, `_link`, `_lien_` ||

 * Pour ajouter un WYSIWYG au champ contenu, insérez la ligne suivante dans le _config.php_ : 

<code>$rteFields[] = 'nomTable_contenu';</code>

 * Pour ajouter l'upload d'image au champ 'nomTable_img' : 

<code>$uploadFields[] = 'nomTable_img';</code>

  # Pour recadrer automatiquement une image (en pixels) :

  <code>$_Gconfig['imageAutoResize'] = array('nomChamp_img'=>array(maxWidth,maxHeight));</code>

 * Pour ajouter un champ de couleur :

<code>$_Gconfig['colorFields'][] = 'nomChamp_color';</code>

 * Pour ajouter des champs de recherche :

<code>
//Listez tous les champs de recherche
$searchField['nomTable'] = array('nomTable_titre');
</code>

 * Les traductions :

<code>
$admin_trads["nomTable.nomTable_titre_fr"]["fr"] = "Titre";
// ...
</code>

 * Les champs obligatoires : 

<code>
$neededFields[] = "nomTable_titre";
</code>

 * Les champs de type url : 
<code>$urlFields[] = 'nomChamp_url';</code>

 * Les champs de type mail  :
<code>$mailFields[] = 'nonChamp_mail'</code>

 * Les champs de type Password :

<code>$_Gconfig['passwordFields'][] = 'nomChamp_password';</code>

 * Les champs de type ordre :

<code>$orderFields['nomTable'] = array('nomChamp_ordre');</code>

 * Afficher/Masquer une ligne de table (attribut _en`_ligne`_) : 

<code>$_Gconfig['hideableTable'][] = 'nomTable';</code>

 * Rendre visible

 * Recharger la page lors de la sélection d'un champ : 

<code>$_Gconfig['reloadOnChange'] = array('nomChamp');</code>

<h3>Les relations en tables</h3>

 * Pour ajouter une relation de simple clé externe :

<code>
$relations['nomTable']['fk_champ'] = 'fk_nomTable';

//Exemple :
$relations['a_actualite']['fk_image_id'] = 'a_image';
</code>

 * Les tables de relation (n, n) :

<code>
$tablerel['r_table_relation'] = array('FK_CHAMP1'=>'FK_TABLE1','FK_CHAMP2'=>'FK_TABLE2');

//Exemple :
$tablerel['actualite_theme'] = array('fk_actualite_id'=>'a_actualite','fk_theme_id'=>'a_theme');
</code>

 * Relation inverse (les entrées de x tables qui pointent vers ma table) :

<code>
$relinv['table_parente']['NOM_DU_FAUX_CHAMP'] = array('table_fille','CLEF EXTERNE');
//Ou la même chose, mais en AJAX
$_Gconfig['ajaxRelinv']['TABLE']['NOM_DU_FAUX_CHAMP'] = array('SOUS_TABLE','CLEF EXTERNE',array('LISTE DES CHAMPS A AFFICHER'));

//Exemple :
$relinv['a_actualite']['PARAGRAPHES'] = array('s_paragraphe','fk_actualite_id');
//Version AJAX
$_Gconfig['ajaxRelinv']['a_actualite']['PARAGRAPHES'] = array('s_paragraphe','fk_actualite_id',array('paragraphe_titre','fk_para_type_id','paragraphe_contenu'));
</code>



<h2><u>Un exemple : gestion des actualités</u></h2>

<h3>Ajouter les actualités dans le back-office</h3>

 * Ouvrez le fichier de configuration "_config.php_".

 * Déclarez toutes ces variables globales qui nous seront utiles plus tard : 
<code>
global $tabForms,$uploadFields,$_Gconfig,$relinv,$orderFields,$admin_trads, $gs_roles, $rteFields, $relations, $tablerel, $basePath, $admin_trads,$searchField;
</code>

 * Pour ajouter un lien vers la gestion des actualités dans le back-office : 

<code>
$_Gconfig['bigMenus']['Actualités'][] = 'a_actualite';
</code>

 * pour modifier le titre du bouton et ajouter un icône :
<code>
//traduction du texte
$admin_trads["cp_txt_a_actualite"]["fr"] = "Actualités";

//Ajout de l'icône
$tabForms["a_actualite"]["picto"] = ADMIN_PICTOS_FOLDER."32x32/apps/internet-news-reader.png";
</code>

*Important: n'oubliez pas de rajouter le plugin dans le back-office et de l'installer!*

<h3>Afficher la liste des actualités</h3>

 * Cliquez sur le bouton pour afficher la liste des actualités.

 * Pour définir quels champs afficher dans le back-office :

<code>
$tabForms['a_actualite']['titre'] = array('actualite_date', 'actualite_titre', 'actualite_img','actualite_contenu','en_ligne');
//'a_actualite' : nom de la table
//'titre' : pour définir les champs à lister
</code>

<h3>Créer le formulaire d'ajout</h3> 

 * Dans le dossier "_forms_", créez, si ce n'est pas déjà fait, un fichier PHP nommé "_actualite.form.php_".(_include/plugins/actualites/forms/actualite.form.php_).
Il contiendra la liste des attributs de la base de données à générer dans le formulaire

 * Faites appel à ce fichier dans le _config.php_ : 

<code>
$tabForms['a_actualite']['pages']['Actualité'] = array('../plugins/actualites/forms/actualite.form.php');
//'a_actualite' : nom de la table
//'pages' : pour définir où se trouve le fichier de formulaire
//'Actualité' : nom pour définir l'onglet (modifiable)
//Le tableau doit contenir le chemin vers notre fichier de formulaire
</code>

 * Dans le fichier créé (_actualite.form.php_), générez chaque champ utile comme ceci :

<code>
<?php
//Le CMS reconnaîtra automatiquement la date
$this->gen('actualite_date');
$this->genlg('actualite_titre');
//genlg va servir à générer le contenu multilingue
$this->genlg('actualite_contenu');
$this->gen('actualite_img');
$this->gen('en_ligne');
?>
</code>

 * Pour ajouter un WYSIWYG au champ contenu, insérez la ligne suivante dans le _config.php_ : 

<code>$rteFields[] = 'actualite_contenu';</code>

 * Pour ajouter l'upload d'image au champ 'actualite_img' : 

<code>$uploadFields[] = 'actualite_img';</code>

 * Pour ajouter des champs de recherche :

<code>$searchField['a_actualite'] = array('actualite_date', 'actualite_titre', 'actualite_img','actualite_contenu','en_ligne');</code>


 * Afficher/Masquer l'actualité (grâce à l'attribut _en`_ligne`_) : 

<code>$_Gconfig['hideableTable'][] = 'a_actualite';</code>

 * Les traductions :

<code>
$admin_trads["a_actualite.actualite_titre_fr"]["fr"] = "Titre de l'actualité (FR)";
$admin_trads["a_actualite.actualite_titre_en"]["fr"] = "Titre de l'actualité (EN)";
$admin_trads["a_actualite.actualite_contenu_fr"]["fr"] = "Contenu de l'actualité (FR)";
$admin_trads["a_actualite.actualite_contenu_en"]["fr"] = "Contenu de l'actualité (EN)";
$admin_trads["a_actualite.actualite_img"]["fr"] = "Image de l'actualité";
$admin_trads["a_actualite.actualite_date"]["fr"] = "Date de l'actualité";
$admin_trads["a_actualite.en_ligne"]["fr"] = "En ligne";
</code>

 * les champs obligatoires : 

<code>
$neededFields[] = "actualite_titre";
$neededFields[] = "actualite_contenu";
$neededFields[] = "en_ligne";
</code>