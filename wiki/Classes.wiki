<h1>Classes</h1>

== Classes ==

=== Headers de page (genHeaders) _(include/global/genHeaders.php)_ ===

*Seulement dans le _init()_ ou _afterinit()_ du gabarit/plugin :*

 * Ajouter un nouveau "niveau" de titre
<code>$this->site->g_headers->addTitle('Sous-titre');</code>

 * Ajouter un fichier CSS (dossier _css/_) : 
<code>$this->site->g_headers->addCss('fichier.css');</code>

 * Ajouter du texte CSS : 
<code>$this->site->g_headers->addCssText('border:none;');</code>

 * Ajouter un fichier Javasript (dossier _js/_) :
<code>$this->site->g_headders->addScript('monScript.js')</code>

 * Ajouter du texte HTML :
<code>$this->site->g_headers->addHtmlHeaders($text);</code>

 * Modifier le titre de la page
<code>$this->site->g_headers->setTitle('Nouveau Titre');</code>

 * Modifier la balise Meta de description :
<code>$this->site->g-headers->setMetaDescription('Nouvelle description');</code>

 * Modifier la balise Meta de mots-clés :
<code>$this->site->g_headers->setMetaKeywords('nouveau, mot, clé');</code>

 * Récupérer le titre de la page, la description, les mots-clés, le HTML du header et les chemins CSS et JS de fichiers :
<code language="php">
$this->site->g_headers->getTitle();
$this->site->g_headers->getMetaDescription();
$this->site->g_headers->getMetaKeywords();
$this->site->g_headers->getHtmlHeaders();
$this->site->g_headers->getCssPath($listeFichiers);
$this->site->g_headers->getJsPath($listeFichiers);</code>


=== Rubrique : genRubrique _(include/global/genRubrique.php)_ ===

 * Récupérer l'Id de la rubrique :
<code>$this->site->g_rubrique->rubrique_id;</code>

 * Récupérer les paragraphes de la rubrique :
<code>$this->site->g_rubrique->getParagraphes();</code>

 * Récupérer le chemin complet et le titre de la rubrique :
<code>$this->site->g_rubrique->getFullTitle();</code>

 * Récupérer toutes les sous-rubriques de la rubrique (ligne de la table _s_rubrique_) :
<code>$this->site->g_rubrique->getSubRubs()</code>

 * Afficher ou masquer les paragraphes de la rubrique :
<code>
$this->site->g_rubrique->showParagraphes=false;
$this->site->g_rubrique->showParagraphes=true;</code>

 * Savoir si le plugin est actif ( retourne true ou false):
<code>$this->site->g_rubrique->isActivePlugin()</code>

 * Savoir si on se trouve sur la rubrique modifiable, ou sur la rubrique en ligne : 
<code>$this->site->g_rubrique->isRealRubrique()</code>

 * Définir si on affiche la boîte lexique, de téléchargement, ou la boite "En savoir plus" :
<code>
$this->site->g_rubrique->showBoxLexique=false;
$this->site->g_rubrique->showBoxDwl=false;
$this->site->g_rubrique->showBoxLinks=false;
</code>

=== Générer un template : genTemplate _(include/global/genTemplate.php)_ ===

Plus d'infos sur [CreationGabarit#Creation_du_template_de_la_liste_des_actualites cette page]

<code>

</code>

=== Créer un cache : genCache _(include/global/gencache.php)_ ===

Chaque rubrique possède un cache. Vous pouvez aussi créer un cache pour votre application.

<code>
//Déclaration du cache
$cache = new genCache(idDuCache, derniereDateModif);
//Si le cache existe et si le contenu n'a pas été dernièrement modifié
if($cache->cacheExits())
  echo $cache->getCache();
else 
{
  //On récupère le contenu
  $html= doSomething();
  //On le met en cache
  $cache->saveCache($html);
  echo $html;
}
</code>

== Fonctions de base ==

=== Urls ===

 * Récupérer l'identifiant de la rubrique du gabarit correspondant

<code>getRubFromGabarit('genGabarit')</code>

 * Récupérer la premiere rubrique (identifiant) qui a comme gabarit, la classe passée en paramètre

<code>getRubriqueByGabarit('')</code>